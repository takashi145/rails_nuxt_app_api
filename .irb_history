Time.now
TimeWithZone
Tie.current
Time.current
exit
Time.current
Time.now
exit
Time.now.zone
Time.local(2022).zone
I18n.locale
exit
I18n.locale
User.all
exit
User.find(1).created_at_before_type_cast
pp $LOAD_PATH
pp ActiveSupport::Dependencies.autoload_paths
Rails.autoloaders.zeitwerk_enabled?
exit
Hirb::View.enabled?
Hirb.enable
puts Hirb::Helpers::Table.render [[1,2], [2,3]]
Hirb::View.width
exit
rails --version
rails
ls
rails db:migrate
exit
user = User.new
exit
user = User.new
exit
Time.now
user = User.new
Hirb.disable
user = User.new
user.save
user.errors.full_messages
I18n.t("activerecord.attributes.user")
user.password = "aaaaa"
user.save
user.errors.full_messages
exit
User.create(email: "a@a.com")
exit
User.create(email: "a@a.com")
exit
User.create(email: "a@a.com")
exit
User.create(email: "a@a.com")
exit
domain = "@example.com"
email = "a" * (256 - domain.length) + domain
email.length
user = User.new(name: "test", email: email, password: "password")
user.save
user.save
exit
domain = "@example.com"
email = "a" * (256 - domain.length) + domain
email.length
user = User.new(name: "test", email: email, password: "password")
exit
domain = "@example.com"
email = "a" * (256 - domain.length) + domain
email.length
email
256
user = User.new(name: "test", email: email, password: "password")
user.save
user.errors.full_messages
email = "test@test@com"
user.email = email
user.email
user.save
user.errors.full_messages
email = "active@example.com"
User.create(name: "active", email: email, password: "password", activated: true)
user = User.new(name: "test", email: email, password: "password")
user.save
user.errors.full_messages
email = "TEST@test.COM"
user = User.new(name: "test", email: email, password: "password")
user.save
user.email
exit
